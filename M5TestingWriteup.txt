- checkAttackersEmpty(): This unit test checks to see that for a newly created Enemy object, its attackers list is
  initially empty. Additionally, by doing this, the test also verifies that the list is not initially null. This test
  is relevant because it covers the time period when an enemy has just been created and has yet to be attacked.

- testAddAttackers(): This unit test verifies that the addAttacker() method is working properly. In other words, it
  is making sure that we are able to add towers to the attackers list when an enemy is attacked. THis test is relevant
  because it verifies an extremely important functionality involved in the combat stages of the game.
  
- testInRange(): This unit test verifies that inRange() method is working properly. This implies that if the coordinates
  of the tower in repect to the enemies is out of the set range (50), then it will return false. This test is relevant because
  it ensures that the tower does not have infinite reach and only shoots in its intended range. 
  
- testAddHealth(): This unit test verifies that addHealth() method is working properly. This implies that if this method is called
  then it will add one health point to the players monument. This test is relevant because it ensures that the correct amount of 
  health is added to the player at the end of the round when called. 

- testCreateInitText(): This test verifies that the initial health text of the enemies is correct. The various enemies have
  differing healths. This method creates the text that will later be displayed to the player on each enemy. It compares
  the expected string of text with the actual text to ensure that it matches.

- testCreateDisplay(): This test checks to see if the enemy display consists of a circle with text stacked on top of it.
  It creates the display with the corresponding method and checks that the child at index 0 is a Circle and the child at
  index 1 is text.